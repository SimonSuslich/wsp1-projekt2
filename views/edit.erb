<head>
    <link rel="stylesheet" href="/css/add_new_product.css?<%=Time.now.to_i%>">
</head>

<div class="add_new_product_container">
    <h1>Edit product</h1>

    <form action="/admin/<%=@product['id']%>/update" method="post" enctype="multipart/form-data" onsubmit="prepareFiles(event)" class="add-new-product">

        <%@product.each do |key, value|%>
            <%banned_key = ['image_paths', :basic_info, :formated_price, 'id']%>
            <%if !banned_key.include?(key)%>
                <div class="part">
                    <label><%=prettyPrintKey(key)%></label>
                    <%if key == 'description' %>
                        <textarea class="textarea" name="description" rows="5"><%=value%></textarea>
                    <% else %>
                        <input type="text" name="<%=key%>" value="<%=value%>"> 
                    <% end %>
                </div>
            <%end%>
        <%end%>



        <div class="part upload-images-part">
            <label for="images">Choose images:</label>

            <input type="file" id="images" name="images[]" accept="image/*" multiple style="display: none;" onchange="previewImages(event)">

            <button type="button" id="customButton" class="btn-1 btn-color">Choose Files</button>

            <button type="button" onclick="removeAllImages()" class="btn-1 btn-color">Clear Images</button>

            <div class="image-preview-container" id="imagePreviewContainer">

                <%@product['image_paths'].each do |image|%>

                    <div class="image-preview">
                        <img src="<%=image%>">
                        <button class="delete-btn">
                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="#000000" width="24" height="24">
                                <path d="M5 20a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V8h2V6h-4V4a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v2H3v2h2zM9 4h6v2H9zM8 8h9v12H7V8z"></path>
                                <path d="M9 10h2v8H9zm4 0h2v8h-2z"></path>
                            </svg>
                        </button>
                    </div>

                <% end %>

            </div>

        </div>


        <!-- Submit Button -->
        <input type="submit" value="Submit" class="btn-1 btn-submit btn-color">
    </form>
</div>


<script>


        // Reference the file input and custom button
    const fileInput = document.getElementById("images");
    const customButton = document.getElementById("customButton");
    const fileNamesDiv = document.getElementById("fileNames");

    // When the custom button is clicked, trigger the file input click
    customButton.addEventListener("click", () => {
        fileInput.click();
    });

    let fileArray = []; // To store selected files

    function previewImages(event) {
        const files = Array.from(event.target.files); // Convert FileList to array
        const previewContainer = document.getElementById('imagePreviewContainer');

        // Add files to custom array
        fileArray.push(...files);

        // Display each file in the preview container
        files.forEach((file, index) => {
            const reader = new FileReader();

            // Create a preview element
            const previewDiv = document.createElement('div');
            previewDiv.classList.add('image-preview');

            const img = document.createElement('img');
            const deleteButton = document.createElement('button');
            deleteButton.classList.add('delete-btn');
            deleteButton.innerHTML = `
                <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='#000000' width='24' height='24'>
                    <path d="M5 20a2 2 0 0 0 2 2h10a2 2 0 0 0 2-2V8h2V6h-4V4a2 2 0 0 0-2-2H9a2 2 0 0 0-2 2v2H3v2h2zM9 4h6v2H9zM8 8h9v12H7V8z"></path>
                    <path d="M9 10h2v8H9zm4 0h2v8h-2z"></path>
                </svg>
            `;

            // Add click event to delete button
            deleteButton.onclick = () => {
                fileArray.splice(index, 1); // Remove the file from the array
                previewDiv.remove(); // Remove the preview
            };

            previewDiv.appendChild(img);
            previewDiv.appendChild(deleteButton);
            previewContainer.appendChild(previewDiv);

            // Load the image preview
            reader.onload = function (e) {
                img.src = e.target.result;
            };
            reader.readAsDataURL(file);
        });

        event.target.value = ''; // Clear the file input
    }


    function prepareFiles(event) {
        const form = event.target; // The form element
        const formData = new FormData(form);

        // Ensure files from fileArray are appended to the formData
        fileArray.forEach((file, index) => {
            formData.append(`images[]`, file);
        });

        fetch(form.action, {
            method: form.method,
            body: formData,
        })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url; // Redirect if needed
                } else {
                    return response.json();
                }
            })
            .catch(error => {
                console.error("Error submitting form:", error);
            });

        event.preventDefault(); // Prevent default form submission
    }


    function removeAllImages() {
        const previewContainer = document.getElementById('imagePreviewContainer');
        previewContainer.innerHTML = ''; // Clear all previews
        fileArray = []; // Clear the file array
    }
</script>